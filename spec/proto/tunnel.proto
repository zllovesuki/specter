syntax = "proto3";
package protocol;

option optimize_for = SPEED;
option go_package = "kon.nect.sh/specter/spec/protocol";

import "spec/proto/node.proto";
import "google/protobuf/descriptor.proto";

service TunnelService {
    rpc Ping(ClientPingRequest) returns (ClientPingResponse);
    rpc RegisterIdentity(RegisterIdentityRequest) returns (RegisterIdentityResponse);
    rpc GetNodes(GetNodesRequest) returns (GetNodesResponse);
    rpc GenerateHostname(GenerateHostnameRequest) returns (GenerateHostnameResponse);
    rpc PublishTunnel(PublishTunnelRequest) returns (PublishTunnelResponse);
}

message TunnelRoute {
    Node clientDestination = 1;
    Node chordDestination = 2;
    Node tunnelDestination  = 3;

    string hostname = 10;
}

message ClientToken {
    bytes token = 1;
}

message ClientPingRequest {}

message ClientPingResponse {
    Node node = 1;
    string apex = 2;
}

message RegisterIdentityRequest {
    Node client = 1;
}

message RegisterIdentityResponse {
    ClientToken token = 1;
    string apex = 2;
}

message GetNodesRequest {}

message GetNodesResponse {
    repeated Node nodes = 1;
}

message GenerateHostnameRequest {}

message GenerateHostnameResponse {
    string hostname = 1;
}

message PublishTunnelRequest {
    string hostname = 1;
    // servers are tun identities
    repeated Node servers = 2;
}

message PublishTunnelResponse {
    repeated Node published = 1;
}

extend google.protobuf.EnumValueOptions {
  string alpn_name = 54242;
}

message Link {
    enum ALPN {
        UNKNOWN = 0;
        SPECTER_CHORD = 1 [(alpn_name) = "specter-chord/1"];
        SPECTER_TUN = 2 [(alpn_name) = "specter-tun/1"];

        HTTP2 = 9 [(alpn_name) = "h2"];
        HTTP = 10 [(alpn_name) = "http/1.1"];
        TCP = 11 [(alpn_name) = "specter-tcp/1"];
    }

    ALPN alpn = 1;
    string hostname = 2;
    string remote = 3;
}

message TunnelDestination {
    Node chord = 1;
    Node tunnel = 2;
}

enum TunnelStatusCode {
    STATUS_OK = 0;

    UKNOWN_ERROR = 1;
    NO_DIRECT = 2;
}

message TunnelStatus {
    TunnelStatusCode status = 2;
    string error = 3;
}